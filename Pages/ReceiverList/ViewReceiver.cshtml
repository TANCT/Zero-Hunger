@page
@using ZeroHunger.Model
@model ZeroHunger.Pages.ReceiverList.ViewReceiverModel
@{
    <head>
        <title>Manage Receiver</title>
            <!-- Mobile Specific Metas -->
	        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
           
    </head>

    <body>
    @if(null != TempData["alertMessage"])
               {
                  <script type="text/javascript">
                   alert('@TempData["alertMessage"]');
                  </script>
               }
    <div class="container row p-0 m-0">
        <div class="col-3">
            <a asp-page="Index" class="btn btn-info">
                <i class="bi bi-arrow-bar-left"></i> &nbsp;back
            </a>
        </div>
        
        <div class="col-12 border m-3 p-3">
            <div class="col-9">
                <h2 style="color:black">Receiver Info</h2>
            </div>
        
        
            <table style="text-align:center; width:100%;" class="table table-striped table-bordered">
                <tr>
                    <th>IC no</th>
                    <td>@Html.DisplayFor(Receiver => Model.receiver.receiverIC)</td>
                </tr>
                <tr>
                    <th>Name</th>
                    <td>@Html.DisplayFor(Receiver => Model.receiver.receiverName)</td>
                </tr>
                <tr>
                    <th>Gender</th>
                    <td>@getGender(Model.receiver.receiverGender)</td>
                </tr>
                <tr>
                    <th>DOB</th>
                    <td>@Html.DisplayFor(Receiver => Model.receiver.receiverDOB) (@getAge(Model.receiver.receiverDOB) years old)</td>
                </tr>
                <tr>
                    <th>Marital Status</th>
                    <td>@Html.DisplayFor(Receiver => Model.receiver.receiverMarital)</td>
                </tr>
                <tr>
                    <th>Occupation</th>
                    <td>@Html.DisplayFor(Receiver => Model.receiver.receiverOccupation)</td>
                </tr>
                <tr>
                    <th>School or Company</th>
                    <td>@Html.DisplayFor(Receiver => Model.receiver.receiverCompany)</td>
                </tr>
                <tr>
                    <th>Salary (RM)</th>
                    <td>@Html.DisplayFor(SalaryGroup => Model.salaryGroups.ElementAt(Model.receiver.receiverSalaryGroupID).salaryRange)</td>
                </tr>
                <tr>
                    <th>Email</th>
                    <td>@Html.DisplayFor(Receiver => Model.receiver.receiverEmail)</td>
                </tr>
                <tr>
                    <th>Phone No.</th>
                    <td>@Html.DisplayFor(Receiver => Model.receiver.receiverPhone)</td>
                </tr>
                <tr>
                    <th>Address</th>
                    <td>@Html.DisplayFor(Receiver => Model.receiver.receiverAdrs1)
                        <br>@Html.DisplayFor(Receiver => Model.receiver.receiverAdrs2)</td>
                </tr>
                <tr>
                    <th>Health Status</th>
                    <td>@Html.Raw(Model.receiver.healthStatus )</td>
                </tr>
                <tr>
                    <th>Unhealthy Habit</th>
                    <td>@Html.Raw(Model.receiver.unhealthyHabit )</td>
                </tr>

            </table>
        </div>
        <br>
        <div class="col-12 border m-3 p-3">
            @if(Model.receiver.receiverFamilyNo==0)
            {
                <div class="col-9">
                    <h5>This applicant live alone.</h5>
                </div>
            }
            else
            {
                <div class="col-9">
                    <h2>Family Info</h2>
                </div>
                <table style="text-align:center; width:100%;" class="table table-striped table-bordered">
                <thead>    
                    <tr>
                        <th>IC no</th>
                        <th>Name</th>
                        <th>Relationship</th>
                        <th>DOB</th>
                        <th>Occupation</th>
                        <th>Company or School</th>
                        <th>Salary (RM)</th>      
                        <th>Health Status</th>
                        <th>Unhealthy Habit</th>
                    </tr>
                </thead>

                    @foreach(ReceiverFamily familyInfo in Model.family)
                    {
                        <tr>
                            <td>@Html.DisplayFor(ReceiverFamily => familyInfo.familyIC)</td>
                            <td>@Html.DisplayFor(ReceiverFamily => familyInfo.familyName)</td>
                            <td>@Html.DisplayFor(ReceiverFamily => familyInfo.relationship)</td>
                            <td>@Html.DisplayFor(ReceiverFamily => familyInfo.familyDOB) <br>(@getAge(familyInfo.familyDOB) years old)</td>
                            <td>@Html.DisplayFor(ReceiverFamily => familyInfo.familyOccupation)</td>
                            <td>@Html.DisplayFor(ReceiverFamily => familyInfo.familyCompanyOrSchool)</td>
                            <td>@Html.DisplayFor(SalaryGroup => Model.salaryGroups.ElementAt(familyInfo.familySalaryGroupID).salaryRange)</td>
                            <td>@Html.Raw(familyInfo.healthStatus )</td>
                            <td>@Html.Raw(familyInfo.unhealthyHabit )</td>
                        </tr>
                    }
            
                </table>
            }
        </div>

         <br>
        <div class="col-12 border m-3 p-3">
            @if(Model.questionnaire==null )
            {
                <div class="col-9">
                    <h5>This applicant did not fill the questionnaire.</h5>
                </div>
            }
            else
            {
                <div class="col-9">
                    <h2>Questionnaire</h2>
                </div>
                <table style="text-align:center; width:100%;" class="table table-striped table-bordered">
                   
                    <tr>
                        <th>Date</th>
                        <td>@Html.Raw( Model.questionnaire.date )</td>
                    </tr>
                    <tr>
                        <th>Reason for application</th>
                        <td>@Html.Raw( Model.questionnaire.reason )</td>
                    </tr>
                    <tr>
                        <th>Other Sponsorship</th>
                        <td>@Html.Raw( Model.questionnaire.otherSponsorship )</td>
                    </tr>
                    <tr>
                        <th>Type of Property</th>
                        <td>@Html.Raw( Model.questionnaire.property )</td>
                    </tr>
                    <tr>
                        <th>Additional Information</th>
                        <td>@Html.Raw( Model.questionnaire.additional )</td>
                    </tr>
               
                    
            
                </table>
            }
        </div>
        <div class="col-12 m-3 p-3 text-center">
        
        
            <a href="/ReceiverList/ViewReceiver?id=@Model.receiver.receiverIC&action=email" class='btn btn-success text-white' style='cursor:pointer; width:40%;'>
                Send Questionnaire
            </a>
            &nbsp;
            <a href="/ReceiverList/ViewReceiver?id=@Model.receiver.receiverIC&action=delete" class='btn btn-danger text-white' style='cursor:pointer; width:40%;'>
                Remove Receiver
            </a>
        
        </div>
        
        <br>

       
    </div>
    </body>

    @functions
    {
        public string getGender(char g)
        {
            if(g=='M')
            {
                return "Male";

            }
            else if(g=='F')
            {
                return "Female";
            }
            return "Unknown";
        }
        public int getAge(string DOB)
        {
            int birthyear=int.Parse(DOB.Substring(0,4));
            int thisyear = DateTime.Now.Year;
            //thisyear %= 1000;
            //thisyear %= 100;
            //if(thisyear<birthyear)
            //{
            //    thisyear += 100;
            //}
            return thisyear - birthyear;
        }
    }
}
